/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/models/folder.glb 
*/

import React, { useEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { Mesh } from "three";
import * as THREE from "three";

interface GLTFResult {
  nodes: Record<string, Mesh>;
  materials: Record<string, any>;
}
export function Folder(props: any) {
  const { nodes, materials } = useGLTF(
    "/models/folder.glb"
  ) as unknown as GLTFResult;
  const modelRef = useRef<Mesh>(null);

  useEffect(() => {
    const genGolor = new THREE.Color("#333333");
    materials.Material.color = genGolor;
    materials.Material.metalness = 1;
    materials.Material.roughness = 1;
    console.log(materials);
  }, []);

  return (
    <group
      {...props}
      dispose={null}
      rotation={[0, Math.PI / 2, 0]}
      scale={[1, 1, 1.6]}
    >
      <mesh
        geometry={nodes.Cube.geometry}
        material={materials.Material}
        ref={modelRef}
      />
    </group>
  );
}

useGLTF.preload("/folder.glb");
